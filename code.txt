sign in to Cruddur

Nyamekye Asford

nyamekyeasford@exampro.co
nyamekyeasford
Testing1234

confirmation code - 1234
append it under /activities/home

@app.route("/api/activities/notifications", methods=['GET'])
def data_notifications():
  data = NotificationsActivities.run()
  return data, 200

Week 2

Run pip install -r requirements.txt in /backend/flask

append under roll bar request

# @app.before_first_request
with app.app_context():
  def init_rollbar():
      """init rollbar module"""
      rollbar.init(
          # access token
          rollbar_access_token,
          # environment name
          'production',
          # server root directory, makes tracebacks prettier
          root=os.path.dirname(os.path.realpath(__file__)),
          # flask already sets up logging
          allow_logging_basic_config=False)

      # send exceptions from `app` to rollbar, using flask's signal system.
      got_request_exception.connect(rollbar.contrib.flask.report_exception, app)

      Week 3

      run npm i aws-amplify --save in /frontend-react

      export these variables

      REACT_AWS_PROJECT_REGION=
      REACT_APP_AWS_COGNITO_IDENTITY_POOL_ID=
      REACT_APP_AWS_COGNITO_REGION=
      REACT_APP_AWS_USER_POOLS_ID=
      REACT_APP_CLIENT_ID=

      vid 3

      run a pip install -r requirements.txt in /backendlask

      week 4

export CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"
gp env CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"

export PROD_CONNECTION_URL="postgresql://root:DBPassW0rd123@cruddur-db-instance.ccvedozbc1wo.us-east-1.rds.amazonaws.com:5432/cruddur"
gp env PROD_CONNECTION_URL="postgresql://root:DBPassW0rd123@cruddur-db-instance.ccvedozbc1wo.us-east-1.rds.amazonaws.com:5432/cruddur"

chmod u+x bin/create,drop,schema-load in backendlask

run pip install -r requirements.txt in backendflask

export DB_SG_RULE_ID="sgr-0b84f768345b833ba"
gp env DB_SG_RULE_ID="sgr-0b84f768345b833ba"

export DB_SG_ID="sg-0371a88eb14ee8eba"
gp env DB_SG_ID="sg-0371a88eb14ee8eba"

aws ec2 modify-security-group-rules \
    --group-id $DB_SG_ID \
    --security-group-rules "SecurityGroupRuleId=$DB_SG_RULE_ID,SecurityGroupRule={IpProtocol=tcp,FromPort=5432,ToPort=5432,CidrIpv4=$GITPOD_IP/32}"